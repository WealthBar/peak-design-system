name: Build and deploy to production
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Test
        uses: actions/checkout@v1

      - name: Use Node.js 11
        uses: actions/setup-node@v1
        with:
          node-version: 11.10.x

      - name: Run tests
        run: |
          yarn install
          yarn run ci

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Build
        env:
          CONTAINER_REGISTRY: ghcr.io
          CONTAINER_IMAGE: ghcr.io/wealthbar/peak-design-system
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login $CONTAINER_REGISTRY -u $GITHUB_ACTOR --password-stdin
          docker pull $CONTAINER_IMAGE:latest || true
          docker build --cache-from $CONTAINER_IMAGE:latest --build-arg CI_COMMIT_SHA=$GITHUB_SHA -t $CONTAINER_IMAGE:$GITHUB_SHA -t $CONTAINER_IMAGE:latest .
          docker push $CONTAINER_IMAGE:$GITHUB_SHA
          docker push $CONTAINER_IMAGE:latest

    needs: test

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Save DigitalOcean kubeconfig
        uses: digitalocean/action-doctl@master
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          CLUSTER_NAME: ${{ secrets.cluster_name }}
        with:
          args: kubernetes cluster kubeconfig show $CLUSTER_NAME > $GITHUB_WORKSPACE/.kubeconfig

      - name: Decrypt repo
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
        run: |
          sudo apt-get update && sudo apt-get install -qq -y git-crypt coreutils
          echo "$GIT_CRYPT_KEY" | base64 --decode > ~/peak-design-system-git-crypt.key
          cd $GITHUB_WORKSPACE
          git-crypt unlock ~/peak-design-system-git-crypt.key

      - name: Deploy to Kubernetes cluster
        env:
          CLUSTER_NAME: ${{ secrets.cluster_name }}
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.digitalocean_access_token }}
        run: |
          curl -L https://get.helm.sh/helm-v3.0.3-linux-amd64.tar.gz | tar xz
          chmod a+x ./linux-amd64/helm
          ./linux-amd64/helm upgrade --install peak $GITHUB_WORKSPACE/charts/peak --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig --namespace peak-design --atomic --timeout 5m --set image.tag=${GITHUB_SHA}

    needs: build
